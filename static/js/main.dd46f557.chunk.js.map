{"version":3,"sources":["reducers/reducer_activity/activity_actions.js","pages/ShowActivity.js","reducers/reducer_activity/activity_reducer.js","reducers/reducer_joke/joke_actions.js","reducers/reducer_joke/joke_reducer.js","reducers/root_reducer.js","pages/ShowJoke.js","App.js","index.js"],"names":["FETCH_ACTIVITY_BEGIN","FETCH_ACTIVITY_SUCCESS","FETCH_ACTIVITY_FAILURE","fetchActivityDetail","dispatch","type","fetch","then","res","json","payload","data","console","log","login","catch","err","error","connect","state","activity","loading","props","useEffect","style","color","initialState","FETCH_JOKE_BEGIN","FETCH_JOKE_SUCCESS","FETCH_JOKE_FAILURE","fetchJokeDetail","joke","rootReducer","combineReducers","action","setup","delivery","store","createStore","applyMiddleware","thunk","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd46f557.chunk.js","sourcesContent":["export const FETCH_ACTIVITY_BEGIN   = 'FETCH_ACTIVITY_BEGIN';\nexport const FETCH_ACTIVITY_SUCCESS = 'FETCH_ACTIVITY_SUCCESS';\nexport const FETCH_ACTIVITY_FAILURE = 'FETCH_ACTIVITY_FAILURE';\n\nexport const fetchActivity = () => ({\n  type: FETCH_ACTIVITY_BEGIN\n});\n\nexport const fetchActivitySuccess = data => ({\n  type: FETCH_ACTIVITY_SUCCESS,\n  payload: { data }\n});\n\nexport const fetchActivityFailure = error => ({\n  type: FETCH_ACTIVITY_FAILURE,\n  payload: { error }\n});\n\n\nexport const fetchActivityDetail = () => {\n    return dispatch=> {\n        dispatch(fetchActivity())\n        return fetch(\"https://www.boredapi.com/api/activity\")\n        .then(res => res.json())\n        .then(json => {\n            dispatch(fetchActivitySuccess(json))\n            console.log(json.login)\n            return json.data\n        })\n        .catch(err => {dispatch(fetchActivityFailure(err))});\n    }\n}","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { fetchActivityDetail } from '../reducers/reducer_activity/activity_actions'\n\n\nconst ShowActivity = (props) => {\n\n    const dispatch = props.dispatch\n    useEffect(() => {\n        dispatch(fetchActivityDetail())\n    },[dispatch])\n\n    \n    return (\n        <div>\n            <h1 style={{color: \"red\"}}>{props.error && \"ERROR\"}</h1>\n            <h1>Activity</h1>\n            <h1 style={{color: \"blue\"}}>{props.loading && \"Fetching Activity, Please Wait...\"}</h1>\n            <h1>{props.data && props.data.activity}</h1>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.activity.data,\n    loading: state.activity.loading,\n    error: state.activity.error\n})\n\nexport default connect(mapStateToProps)(ShowActivity)","import {\n    FETCH_ACTIVITY_BEGIN,\n    FETCH_ACTIVITY_SUCCESS,\n    FETCH_ACTIVITY_FAILURE\n} from './activity_actions'\n\n\nconst initialState = {\n    data: {},\n    loading: false,\n    error: null\n}\n\nexport const reducerOne = (state=initialState, action) => {\n    switch(action.type) {\n        case FETCH_ACTIVITY_BEGIN:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        case FETCH_ACTIVITY_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                data: action.payload.data\n            }\n        case FETCH_ACTIVITY_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                data: {}\n            }\n        default:\n            return state\n    }\n}","export const FETCH_JOKE_BEGIN   = 'FETCH_JOKE_BEGIN';\nexport const FETCH_JOKE_SUCCESS = 'FETCH_JOKE_SUCCESS';\nexport const FETCH_JOKE_FAILURE = 'FETCH_JOKE_FAILURE';\n\nexport const fetchJoke = () => ({\n  type: FETCH_JOKE_BEGIN\n});\n\nexport const fetchJokeSuccess = joke => ({\n  type: FETCH_JOKE_SUCCESS,\n  payload: { data : joke }\n});\n\nexport const fetchJokeFailure = error => ({\n  type: FETCH_JOKE_FAILURE,\n  payload: { error }\n});\n\n\nexport const fetchJokeDetail = () => {\n    return dispatch=> {\n        dispatch(fetchJoke())\n        return fetch(\"https://v2.jokeapi.dev/joke/Programming?type=twopart?safe-mode\")\n        .then(res => res.json())\n        .then(json => {\n            dispatch(fetchJokeSuccess(json))\n            console.log(json)\n            return json\n        })\n        .catch(err => {dispatch(fetchJokeFailure(err))});\n    }\n}","import {\n    FETCH_JOKE_BEGIN,\n    FETCH_JOKE_SUCCESS,\n    FETCH_JOKE_FAILURE\n} from './joke_actions'\n\n\nconst initialState = {\n    joke: {},\n    loading: false,\n    error: null\n}\n\nexport const jokeReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case FETCH_JOKE_BEGIN:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n        case FETCH_JOKE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                joke: action.payload.data\n            }\n        case FETCH_JOKE_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload.error,\n                joke: {}\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport { reducerOne } from './reducer_activity/activity_reducer'\nimport { jokeReducer } from './reducer_joke/joke_reducer'\n\n\nexport const rootReducer = combineReducers({\n    activity: reducerOne,\n    joke: jokeReducer\n})","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { fetchJokeDetail } from '../reducers/reducer_joke/joke_actions'\n\n\nconst ShowJoke = (props) => {\n\n    const dispatch = props.dispatch\n    useEffect(() => {\n        dispatch(fetchJokeDetail())\n    },[dispatch])\n\n    \n    return (\n        <div>\n            <h1 style={{color: \"red\"}}>{props.error && \"ERROR\"}</h1>\n            <h1>Joke</h1>\n            <h1 style={{color: \"blue\"}}>\n                {props.loading && \"Fetching A Joke, Please Wait...\"}\n                </h1>\n            <h1>\n                {props.data && props.data.setup}\n                </h1>\n            <h2>\n                {props.data && props.data.delivery}</h2>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.joke.joke,\n    loading: state.joke.loading,\n    error: state.joke.error\n})\n\nexport default connect(mapStateToProps)(ShowJoke)","import { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport ShowActivity from \"./pages/ShowActivity\";\nimport { rootReducer } from \"./reducers/root_reducer\";\nimport ShowJoke from \"./pages/ShowJoke\";\nimport \"./App.css\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"block__main\">\n        <div className=\"block__left\">\n          <ShowActivity />\n        </div>\n        <div className=\"block__right\">\n          <ShowJoke />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}